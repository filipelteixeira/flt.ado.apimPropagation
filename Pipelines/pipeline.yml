trigger:
- main

name: Deploy Pipeline

variables:
  azureServiceConnection: 'demo-flt.ado.apimPropagation'
  resourceGroupName: 'demo-flt.ado.apimPropagation'
  resourceGroupLocation: 'westeurope'
  templateFile: './Deployment/main.bicep'

pool:
  vmImage: 'windows-latest'
workspace:
  clean: all

steps:
- task: DotNetCoreCLI@2
  displayName: 'Install Swashbuckle.AspNetCore.Cli v6.5.0'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --global Swashbuckle.AspNetCore.Cli --version 6.5.0'

- task: DotNetCoreCLI@2
  displayName: 'Restore project'
  inputs:
    command: 'restore'
    includeNuGetOrg: true

- task: DotNetCoreCLI@2
  displayName: 'Publish Project'
  inputs:
    command: 'publish'
    publishWebProjects: false
    arguments: '-o $(Build.ArtifactStagingDirectory)\Publish'
    modifyOutputPath: false
    zipAfterPublish: false

- task: PowerShell@2
  displayName: 'Generate OpenAPI Definition'
  inputs:
    targetType: 'inline'
    script: 'swagger tofile --output $(Build.ArtifactStagingDirectory)\openapi.json $(Build.ArtifactStagingDirectory)\Publish\flt.ado.apimPropagation.Api.dll v1'
    
- task: ArchiveFiles@2
  displayName: 'Zip Deploy Package'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)\Publish'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)\Publish\Deployment.zip'
    replaceExistingArchive: true

- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'Deploy IaC (bicep)'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: '$(azureServiceConnection)'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '$(resourceGroupName)'
    location: '$(resourceGroupLocation)'
    csmFile: '$(templateFile)'
    deploymentMode: 'Incremental'
    deploymentName: 'DeployPipelineTemplate'

- task: AzureWebApp@1
  inputs:
    azureSubscription: '$(azureServiceConnection)'
    appType: 'webApp'
    appName: 'appServiceFltAdoApimPropagation'
    package: '$(Build.ArtifactStagingDirectory)\Publish\*.zip'

- task: AzureCLI@2
  inputs:
    azureSubscription: '$(azureServiceConnection)'
    scriptType: 'ps'
    scriptLocation: inlineScript
    inlineScript: |
      az apim api import --resource-group $(resourceGroupName) --service-name apiserviceFltAdoApimPropagation --api-id weather --path /weather --display-name flt-ado-apim-propagation --specification-format OpenApi --specification-path $(Build.ArtifactStagingDirectory)\openapi.json

